## Задание для практики чистой архитектуры на Python FastAPI

Тема: Система управления онлайн-курсами 

Описание:

Создайте API для управления онлайн-курсами. API должно включать в себя следующие функциональные возможности:

1. Управление курсами:

* Создание курса:
    * Название курса
    * Описание курса
    * Преподаватель курса
    * Длительность курса
    * Цена курса
    * Категория курса (например, программирование, дизайн, бизнес)
    * Возможность добавить изображение для курса
* Редактирование курса:
    * Изменение всех вышеперечисленных параметров курса
* Удаление курса:
* Получение информации о курсе:
    * По ID курса
    * По названию курса
    * По преподавателю
    * По категории

2. Управление модулями:

* Создание модуля:
    * Название модуля
    * Описание модуля
    * Курс, к которому относится модуль
* Редактирование модуля:
    * Изменение названия, описания, курса
* Удаление модуля:
* Получение информации о модуле:
    * По ID модуля
    * По названию модуля
    * По курсу

3. Управление уроками:

* Создание урока:
    * Название урока
    * Описание урока
    * Модуль, к которому относится урок
    * Тип урока (например, видеоурок, текстовый урок, практическое задание)
    * Материал урока (ссылка на видео, текст, файл)
* Редактирование урока:
    * Изменение всех вышеперечисленных параметров урока
* Удаление урока:
* Получение информации об уроке:
    * По ID урока
    * По названию урока
    * По модулю

4. Управление пользователями:

* Регистрация:
    * Имя пользователя
    * Email
    * Пароль
* Авторизация:
    * Логин с помощью Email и пароля
* Профиль пользователя:
    * Получение информации о пользователе (имя, email, список записанных курсов)
* Запись на курс:
    * Добавление курса в список записанных курсов
* Отмена записи на курс:
    * Удаление курса из списка записанных курсов

Дополнительные требования:

* Чистая архитектура:
    * Разделение кода на слои (презентационный, бизнес-логика, доступ к данным).
    * Использование Dependency Injection для внедрения зависимостей.
    * Тестирование всех слоев.
* FastAPI:
    * Использование асинхронного программирования.
    * Использование ORM (например, SQLAlchemy) для работы с базой данных.
    * Использование JWT для аутентификации.
* База данных:
    * Выберите подходящую базу данных (например, PostgreSQL, SQLite).
    * Создайте схему базы данных для хранения информации о курсах, модулях, уроках и пользователях.
* Дополнительно:
    * Добавьте возможность оставлять отзывы к курсам и урокам.
    * Реализуйте систему рейтинга курсов.

Подсказки:

* Начните с проектирования архитектуры системы.
* Разделите код на слои.
* Используйте TDD (Test-Driven Development) для написания тестов.
* Документируйте код.

Дополнительные материалы:

* [Документация FastAPI](https://fastapi.tiangolo.com/)
* [Чистая архитектура](https://www.amazon.com/Clean-Architecture-Handbook-Software-Structure/dp/0134494164)
* [SQLAlchemy](https://www.sqlalchemy.org/)
* [JWT](https://jwt.io/)

Удачи с вашим проектом!